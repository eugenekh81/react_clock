{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","time","Date","this","setInterval","tick","clearInterval","setState","toLocaleTimeString","React","Component","App","clockName","clockNames","name","isClockVisible","hideClock","showClock","getRandomName","clocks","Math","floor","random","length","renameClock","prevProps","prevState","console","log","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAOaA,EAAb,4MACEC,aADF,IAGEC,MAAQ,CACNC,KAAM,IAAIC,MAJd,uDAOE,WAAqB,IAAD,OAClBC,KAAKJ,QAAUK,aACb,kBAAM,EAAKC,SAAQ,OATzB,kCAaE,WACMF,KAAKJ,SACPO,cAAcH,KAAKJ,WAfzB,kBAmBE,WACEI,KAAKI,SAAS,CAAEN,KAAM,IAAIC,SApB9B,oBAuBE,WACE,IAAQD,EAASE,KAAKH,MAAdC,KAER,OACE,mCACGA,EAAKO,2BA5Bd,GAA2BC,IAAMC,W,OCQpBC,EAAb,4MACEX,MAAQ,CACNY,UAAWC,EAAW,GAAGC,KACzBC,gBAAgB,GAHpB,EAeEC,UAAY,WACV,EAAKT,SAAS,CAAEQ,gBAAgB,KAhBpC,EAmBEE,UAAY,WACV,EAAKV,SAAS,CAAEQ,gBAAgB,KApBpC,EAuBEG,cAAgB,SAACC,GACf,OAAOA,EAAOC,KAAKC,MAAMD,KAAKE,SAAWT,EAAWU,SAAST,MAxBjE,EA2BEU,YAAc,WACZ,EAAKjB,SACH,CAAEK,UAAW,EAAKM,cAAcL,MA7BtC,wDAME,SAAmBY,EAAgBC,GAEjCC,QAAQC,IACN,UAAGH,EAAUb,UAAYa,EAAUb,UAAY,IAC7C,yCADF,eAEUc,EAAUd,UAFpB,eAEoCT,KAAKH,MAAMY,cAXrD,oBAiCE,WACE,MAAsCT,KAAKH,MAAnCY,EAAR,EAAQA,UAAWG,EAAnB,EAAmBA,eAEnB,OACE,qBAAKc,UAAU,MAAf,SACE,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,cAAf,UAEE,sBAAKA,UAAU,eAAf,UAEE,wBACEC,KAAK,SACLD,UAAU,cACVE,QAAS5B,KAAKc,UAHhB,kBAQA,wBACEa,KAAK,SACLD,UAAU,cACVE,QAAS5B,KAAKqB,YAHhB,oBAQA,wBACEM,KAAK,SACLD,UAAU,cACVE,QAAS5B,KAAKa,UAHhB,qBAQF,qBAAKa,UAAU,cAAf,SACGd,GAAkB,cAAC,EAAD,MAErB,qBAAKc,UAAU,cAAf,SACGjB,eAvEf,GAAyBH,IAAMC,WCZ/BsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.55730004.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ntype State = {\n  time: Date;\n};\n\nexport class Clock extends React.Component<{}, State> {\n  timerId?: NodeJS.Timeout;\n\n  state = {\n    time: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(\n      () => this.tick(), 1000,\n    );\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  tick() {\n    this.setState({ time: new Date() });\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <>\n        {time.toLocaleTimeString()}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\nimport clockNames from './api/clockNames.json';\n\ninterface ClockName {\n  id: number;\n  name: string;\n}\n\ntype State = {\n  clockName: string;\n  isClockVisible: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: clockNames[0].name,\n    isClockVisible: true,\n  };\n\n  componentDidUpdate(prevProps: any, prevState: any) {\n    // eslint-disable-next-line\n    console.log(\n      `${prevProps.clockName ? prevProps.clockName : ''}`\n      + 'Property (clockName) has been changed '\n      + `from ${prevState.clockName} to ${this.state.clockName}`,\n    );\n  }\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  getRandomName = (clocks: ClockName[]) => {\n    return clocks[Math.floor(Math.random() * clockNames.length)].name;\n  };\n\n  renameClock = () => {\n    this.setState(\n      { clockName: this.getRandomName(clockNames) },\n    );\n  };\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"clock\">\n          <div className=\"clock__body\">\n\n            <div className=\"App__buttons\">\n\n              <button\n                type=\"button\"\n                className=\"App__button\"\n                onClick={this.showClock}\n              >\n                Show\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"App__button\"\n                onClick={this.renameClock}\n              >\n                Rename\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"App__button\"\n                onClick={this.hideClock}\n              >\n                Hide\n              </button>\n            </div>\n            <div className=\"clock__face\">\n              {isClockVisible && <Clock />}\n            </div>\n            <div className=\"clock__name\">\n              {clockName}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}